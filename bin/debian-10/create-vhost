#!/bin/bash
if [ "$EUID" -ne 0 ]
  then echo "Only run this script as root."
  exit
fi

# -------------------------------------------------------------------------------------------------
echo
echo `date`
echo "Creating the new vhost ..."
# -------------------------------------------------------------------------------------------------

# Output a usage message - used when the parameters input are not correct.
usage () {
    echo "Usage: `basename "$0"` -n <name of the new web-app instance - db name, vhost name, etc> -u <web-app user account> -v <vhost url> -p <php version to use - 5.6/7.1/7.2/7.3>"
}

# -------------------------------------------------------------------------------------------------
# Testing parameter(s)
# -------------------------------------------------------------------------------------------------
while getopts ":n:u:v:p:" opt; do
    case $opt in
        n)
            SUPPLIED_NAME=$OPTARG
            ;;
        u)
            WEB_APP_USER=$OPTARG
            ;;
        v)
            VHOST_URL=$OPTARG
            ;;
        p)
            PHP_VERSION=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
    esac
done

# Check required parameters have had values assigned.
if [ -z $SUPPLIED_NAME ] || [ -z $WEB_APP_USER ] || [ -z $VHOST_URL ] || [ -z $PHP_VERSION ]
then
    echo "The web-app name, web-app user, vhost url and PHP version need to be provided as parameters on the command line."
    usage
    exit 1
fi

# -------------------------------------------------------------------------------------------------
echo
echo `date`
echo "Checking parameters ..."
# -------------------------------------------------------------------------------------------------
if [ -n "$SUPPLIED_NAME" ]
then

    if [ ${#SUPPLIED_NAME} -gt 16 ]
    then
        echo "ERROR - The web-app name length has to be 16 characters or less."
        usage
        exit 1
    fi

    WEB_APP_NAME=$SUPPLIED_NAME
else

    WEB_APP_NAME=$(date +%Y%m%d-%H%M%S)
fi

# Convert to lowercase to make name more usable as a MySQL
# database name/username and as a vhost name.
WEB_APP_NAME="${WEB_APP_NAME,,}"

# Check if the site name has been used already.
if [ -e /etc/apache2/sites-available/${WEB_APP_NAME}.conf ]
then
    echo "ERROR - The web-app name ${WEB_APP_NAME} is already being used."
    usage
    exit 1
fi

# Check PHP version is set correctly.
case $PHP_VERSION in
    5.6|7.1|7.2|7.3)
	echo "PHP version is valid.";;
    *)
	echo "ERROR - The PHP version needs to be either 7.1, 7.2 or 7.3."
	usage
	exit 1
esac

# -------------------------------------------------------------------------------------------------
echo
echo `date`
echo "Run playbook to install web-app code ..."
# -------------------------------------------------------------------------------------------------
#PUBLIC_IP=$(ec2metadata --public-ip)
#PUBLIC_HOSTNAME_AND_DOMAIN=$(ec2metadata --public-hostname)
#PUBLIC_HOSTNAME_AND_DOMAIN=$(aws ec2 describe-tags --region=eu-west-2 --filters "Name=resource-id,Values=$(ec2metadata --instance-id)" --query 'Tags[?Key==`Name`].Value' --output text).ifoadev1.com
#VHOST_SERVERNAME=${WEB_APP_NAME}.${PUBLIC_HOSTNAME_AND_DOMAIN}

ansible-playbook --extra-vars "target=localhost web_app_name=${WEB_APP_NAME} web_app_user=${WEB_APP_USER} vhost_url=${VHOST_URL} php_version=${PHP_VERSION}" /opt/fp-server-tools/playbooks/debian-10/create-vhost.yml

# -------------------------------------------------------------------------------------------------
echo
echo `date`
echo "The web-app can be accessed at http://${VHOST_URL}"
echo "Finished building vhost."
# -------------------------------------------------------------------------------------------------
exit 0
